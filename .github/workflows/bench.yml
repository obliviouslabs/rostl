name: bench
on:
  workflow_dispatch:
  merge_group:
  push:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: write
  deployments: write

jobs:
  benchmark:
    name: Benchmarks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2.7.5
        with:
          cache-on-failure: true
          cache-all-crates: true
          cache-directories: "target"
      - name: Install cargo-binstall
        uses: taiki-e/install-action@cargo-binstall
      - name: Install cargo-criterion
        run: cargo binstall cargo-criterion --force
      - name: Cargo build 
        run: cargo build --profile bench --benches
      - name: Run benchmark
        run: cargo criterion --output-format bencher 2>&1 | tee output.txt
      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark_results
          path: output.txt
  store-benchmark:
    name: Store benchmark results
    runs-on: ubuntu-latest
    needs: benchmark
    steps:
      - uses: actions/checkout@v4
      - name: Download benchmark results
        uses: actions/download-artifact@v4
        with:
          name: benchmark_results
      - name: Store benchmark result
        uses: xtrm0/github-action-benchmark@v1
        with:
          tool: 'cargo'
          output-file-path: output.txt
          # Workflow will fail when an alert happens
          fail-on-alert: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          alert-threshold: '115%'
          # Enable alert commit comment
          comment-on-alert: true
          # Enable Job Summary for PRs
          summary-always: true
          alert-comment-cc-users: '@xtrm0'
          auto-push: true
          benchmark-data-dir-path: 'docs/dev/bench'

  check-benchmark-constraints:
    name: Check benchmark constraints
    runs-on: ubuntu-latest
    needs: benchmark
    steps:
      - uses: actions/checkout@v4
      - name: Download benchmark results
        uses: actions/download-artifact@v4
        with:
          name: benchmark_results
      - name: Verify benchmark tests
        run: python ./scripts/benchmark_rules.py --input output.txt --rules ./scripts/benchmark_rules.txt

  benchmark-success:
    name: Benchmark success
    runs-on: ubuntu-latest
    needs: [store-benchmark, check-benchmark-constraints]
    if: always()
    timeout-minutes: 1
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}