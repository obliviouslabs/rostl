[workspace.package]
version = "1.0.0"
edition = "2021"
rust-version = "1.81"
license = "MIT OR Apache-2.0"
repository = "https://github.com/xtrm0/rods"
exclude = [".github/"]

[workspace.metadata]
platform = "x86_64"

[workspace]
members = [
  "crates/datastructures",
  "crates/oram",
  "crates/primitives",
  "crates/sort",
  "crates/storage",
  # "crates/rodb",
]
# default-members = ["crates/rodb"]
resolver = "2"


[workspace.lints]
rust.missing_debug_implementations = "warn"
rust.missing_docs = "warn"
rust.rust_2018_idioms = { level = "deny", priority = -1 }
rust.rust_2021_compatibility = { level = "deny", priority = -1 }
rust.rust_2024_compatibility = { level = "warn", priority = -1 }
rust.unreachable_pub = "warn"
rust.unused_must_use = "deny"
rust.unnameable-types = "warn"
rust.edition_2024_expr_fragment_specifier = "allow"
rustdoc.all = "warn"

[workspace.lints.clippy]
# These are some of clippy's nursery (i.e., experimental) lints that we like.
# By default, nursery lints are allowed. Some of the lints below have made good
# suggestions which we fixed. The others didn't have any findings, so we can
# assume they don't have that many false positives. Let's enable them to
# prevent future problems.
borrow_as_ptr = "warn"
branches_sharing_code = "warn"
clear_with_drain = "warn"
cloned_instead_of_copied = "warn"
collection_is_never_read = "warn"
dbg_macro = "warn"
derive_partial_eq_without_eq = "warn"
doc_markdown = "warn"
empty_line_after_doc_comments = "warn"
empty_line_after_outer_attr = "warn"
enum_glob_use = "warn"
equatable_if_let = "warn"
explicit_into_iter_loop = "warn"
explicit_iter_loop = "warn"
flat_map_option = "warn"
from_iter_instead_of_collect = "warn"
if_not_else = "warn"
if_then_some_else_none = "warn"
implicit_clone = "warn"
imprecise_flops = "warn"
iter_on_empty_collections = "warn"
iter_on_single_items = "warn"
iter_with_drain = "warn"
iter_without_into_iter = "warn"
large_stack_frames = "warn"
manual_assert = "warn"
manual_clamp = "warn"
manual_is_variant_and = "warn"
manual_string_new = "warn"
match_same_arms = "warn"
missing_const_for_fn = "warn"
mutex_integer = "warn"
naive_bytecount = "warn"
needless_bitwise_bool = "warn"
needless_continue = "warn"
needless_for_each = "warn"
needless_pass_by_ref_mut = "warn"
nonstandard_macro_braces = "warn"
option_as_ref_cloned = "warn"
or_fun_call = "warn"
path_buf_push_overwrite = "warn"
read_zero_byte_vec = "warn"
redundant_clone = "warn"
redundant_else = "warn"
single_char_pattern = "warn"
string_lit_as_bytes = "warn"
string_lit_chars_any = "warn"
suboptimal_flops = "warn"
suspicious_operation_groupings = "warn"
trailing_empty_array = "warn"
trait_duplication_in_bounds = "warn"
transmute_undefined_repr = "warn"
trivial_regex = "warn"
tuple_array_conversions = "warn"
type_repetition_in_bounds = "warn"
uninhabited_references = "warn"
unnecessary_self_imports = "warn"
unnecessary_struct_initialization = "warn"
unnested_or_patterns = "warn"
unused_peekable = "warn"
unused_rounding = "warn"
use_self = "warn"
useless_let_if_seq = "warn"
while_float = "warn"
zero_sized_map_values = "warn"


# These are nursery lints which have findings. Allow them for now. Some are not
# quite mature enough for use in our codebase and some we don't really want.
# Explicitly listing should make it easier to fix in the future.
len_without_is_empty = "allow"

[profile.dev.package]
rand_chacha.opt-level = 3


[profile.release]
codegen-units = 16
debug = "line-tables-only"
lto = "thin"
opt-level = 3
panic = "unwind"
strip = true

[profile.bench]
debug = 2
inherits = "release"
strip = false

[profile.maxperf]
codegen-units = 1
inherits = "release"
lto = "fat"

[profile.reproducible]
inherits = "release"
debug = false
panic = "abort"
codegen-units = 1
overflow-checks = true

[workspace.dependencies]
# rods-rodb = { path = "crates/rodb" }
rods-datastructures = { path = "crates/datastructures" }
rods-oram = { path = "crates/oram" }
rods-primitives = { path = "crates/primitives" }
rods-sort = { path = "crates/sort" }
rods-storage = { path = "crates/storage" }


ahash = { version = "0.8.11" }
bytemuck = { version = "1.22.0", features = ["derive"] }
kanal = { version = "0.1.1" }
rand = "0.9.0"
static_assertions = "1.1.0"
seq-macro = "0.3.6"

# [workspace.dev-dependencies]
criterion = "0.5.1"
criterion-cycles-per-byte = "0.6.1"

